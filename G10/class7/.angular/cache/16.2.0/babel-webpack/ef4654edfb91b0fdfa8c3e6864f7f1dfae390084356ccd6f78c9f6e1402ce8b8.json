{"ast":null,"code":"var _class;\nimport { SortByEnum, SortDirectionEnum } from '../../interfaces/sort.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/students.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../directives/grade-color.directive\";\nimport * as i6 from \"../add-grades/add-grades.component\";\nimport * as i7 from \"../../pipes/average-grade.pipe\";\nfunction StudentsListComponent_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"selected\", group_r2 === ctx_r0.selectedGroup)(\"value\", group_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(group_r2);\n  }\n}\nfunction StudentsListComponent_tr_38_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"app-add-grades\", 17);\n    i0.ɵɵlistener(\"changedValue\", function StudentsListComponent_tr_38_div_18_Template_app_add_grades_changedValue_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.onChangedGrade($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const student_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"studentId\", student_r3.id);\n  }\n}\nfunction StudentsListComponent_tr_38_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"uppercase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\", 15);\n    i0.ɵɵpipe(14, \"averageGrade\");\n    i0.ɵɵelementStart(15, \"div\");\n    i0.ɵɵtext(16);\n    i0.ɵɵpipe(17, \"averageGrade\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(18, StudentsListComponent_tr_38_div_18_Template, 2, 1, \"div\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\")(20, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function StudentsListComponent_tr_38_Template_button_click_20_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const student_r3 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onShowGrading(student_r3.id));\n    });\n    i0.ɵɵtext(21, \"Add Grade\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const student_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(student_r3.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(student_r3.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(7, 8, student_r3.dateOfBirth, \"dd.MM.yyyy\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(student_r3.academy);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(12, 11, student_r3.group));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"grade\", i0.ɵɵpipeBind1(14, 13, student_r3.grades));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(17, 15, student_r3.grades), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showGrading.get(student_r3.id));\n  }\n}\nexport class StudentsListComponent {\n  constructor(studentsService, router, route) {\n    this.studentsService = studentsService;\n    this.router = router;\n    this.route = route;\n    this.students = []; // local copy of the list of students, this can be both all students or filtered students depending on if we are searching something or not\n    this.sortByEnum = SortByEnum;\n    this.sortBy = SortByEnum.id;\n    this.sortDirection = SortDirectionEnum.asc;\n    this.showGrading = new Map(); // {}\n    // list of all filters values\n    this.searchTerm = '';\n    this.isPassing = false;\n    this.selectedGroup = '';\n    // hardcoded value of all the groups\n    this.groups = ['G1', 'G2', 'G3', 'G4', 'G5', 'G6', 'G7', 'G8', 'G9', 'G10', 'G11', 'G12'];\n  }\n  ngOnInit() {\n    this.searchTerm = this.route.snapshot.queryParams['searchTerm'] || '';\n    this.isPassing = !!this.route.snapshot.queryParams['isPassing'];\n    this.selectedGroup = this.route.snapshot.queryParams['group'] || '';\n    this.startDate = !!this.route.snapshot.queryParams['startDate'] ? new Date(this.route.snapshot.queryParams['startDate']) : undefined;\n    this.endDate = !!this.route.snapshot.queryParams['endDate'] ? new Date(this.route.snapshot.queryParams['endDate']) : undefined;\n    this.students = this.prepareFiltersAndGetStudents();\n  }\n  sortStudents(sortBy) {\n    this.sortBy = sortBy;\n    this.students = this.students.sort((a, b) => {\n      // Sorting ascending\n      if (this.sortDirection === SortDirectionEnum.asc) {\n        // Sort by name\n        if (this.sortBy === SortByEnum.name || this.sortBy === SortByEnum.academy) {\n          return a[this.sortBy].toLocaleLowerCase().localeCompare(b[this.sortBy].toLocaleLowerCase());\n        }\n        // Sort by group\n        if (this.sortBy === SortByEnum.group) {\n          return Number(a.group.replace('G', '')) - Number(b.group.replace('G', ''));\n        }\n        // Sort by avg grade\n        if (this.sortBy === SortByEnum.avgGrade) {\n          return a.grades.reduce((sum, curr) => sum + curr, 0) - b.grades.reduce((sum, curr) => sum + curr, 0);\n        }\n        return a[this.sortBy] > b[this.sortBy] ? 1 : -1;\n        // Sorting descending\n      } else {\n        // Sort by name\n        if (this.sortBy === SortByEnum.name || this.sortBy === SortByEnum.academy) {\n          return b[this.sortBy].toLocaleLowerCase().localeCompare(a[this.sortBy].toLocaleLowerCase());\n        }\n        // Sort by group\n        if (this.sortBy === SortByEnum.group) {\n          return Number(b.group.replace('G', '')) - Number(a.group.replace('G', ''));\n        }\n        // Sort by avg grade\n        if (this.sortBy === SortByEnum.avgGrade) {\n          return b.grades.reduce((sum, curr) => sum + curr, 0) - a.grades.reduce((sum, curr) => sum + curr, 0);\n        }\n        return a[this.sortBy] < b[this.sortBy] ? 1 : -1;\n      }\n    });\n    this.sortDirection = this.sortDirection === SortDirectionEnum.asc ? SortDirectionEnum.desc : SortDirectionEnum.asc;\n  }\n  prepareFiltersAndGetStudents() {\n    this.setQueryParams();\n    return this.studentsService.searchStudents({\n      searchTerm: this.searchTerm,\n      isPassing: this.isPassing,\n      group: this.selectedGroup,\n      startDate: this.startDate,\n      endDate: this.endDate\n    });\n  }\n  setQueryParams() {\n    let queryParams = {};\n    if (this.searchTerm) {\n      queryParams.searchTerm = this.searchTerm;\n    }\n    if (this.isPassing) {\n      queryParams.isPassing = this.isPassing;\n    }\n    if (this.selectedGroup) {\n      queryParams.group = this.selectedGroup;\n    }\n    if (this.startDate) {\n      queryParams.startDate = this.startDate;\n    }\n    if (this.endDate) {\n      queryParams.endDate = this.endDate;\n    }\n    this.router.navigate([], {\n      queryParams\n    });\n  }\n  onKeyUp(e) {\n    this.searchTerm = e.target.value;\n    this.students = this.prepareFiltersAndGetStudents();\n  }\n  onIsPassingChange(e) {\n    this.isPassing = e.target.checked;\n    this.students = this.prepareFiltersAndGetStudents();\n  }\n  onGroupSelect(e) {\n    this.selectedGroup = e.target.value;\n    this.students = this.prepareFiltersAndGetStudents();\n  }\n  onStartDateChange(e) {\n    this.startDate = new Date(e.target.value);\n    this.students = this.prepareFiltersAndGetStudents();\n  }\n  onEndDateChange(e) {\n    this.endDate = new Date(e.target.value);\n    this.students = this.prepareFiltersAndGetStudents();\n  }\n  onChangedGrade({\n    studentId,\n    grade\n  }) {\n    this.showGrading.set(studentId, false);\n    this.studentsService.gradeStudent(studentId, grade);\n    this.students = this.prepareFiltersAndGetStudents(); // refetch students from the service\n    // This should not be used while working with Objects and Arrays, as we need to create a new reference so that\n    // Angular knows that it needs to rerender (this is valid for properties that are used in the template)\n    // this.students[studentIndex].grades.push(grade);\n    // This is going to update the students locally in this component, and any other action fetching the students from the service will overwrite the new grade value\n    // console.log('Students in component', this.students);\n    // const studentIndex = this.students.findIndex((s) => s.id === studentId);\n    // this.students[studentIndex] = {\n    //   ...this.students[studentIndex],\n    //   grades: [...this.students[studentIndex].grades, grade],\n    // };\n  }\n\n  onShowGrading(studentId) {\n    // A map is basically an object\n    // {\n    // key === id of the student\n    // value === boolean (is it opened?)\n    // }\n    // set is used to assign value to a property in a Map\n    // get is used to fetch the value\n    this.showGrading.set(studentId, !this.showGrading.get(studentId));\n  }\n}\n_class = StudentsListComponent;\n_class.ɵfac = function StudentsListComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.StudentsService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-students-list\"]],\n  decls: 39,\n  vars: 5,\n  consts: [[1, \"search-wrapper\"], [\"type\", \"search\", \"id\", \"search\", \"placeholder\", \"Search...\", 3, \"value\", \"keyup\"], [1, \"filters-wrapper\"], [\"type\", \"checkbox\", \"id\", \"is-passing\", 3, \"checked\", \"change\"], [\"for\", \"is-passing\"], [\"name\", \"group\", \"id\", \"group\", 3, \"change\"], [\"value\", \"\", 3, \"selected\"], [3, \"selected\", \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"start-date\"], [\"type\", \"date\", \"id\", \"start-date\", 3, \"change\"], [\"for\", \"end-date\"], [\"type\", \"date\", \"id\", \"end-date\", 3, \"change\"], [3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [3, \"selected\", \"value\"], [\"appGradeColor\", \"\", 3, \"grade\"], [4, \"ngIf\"], [3, \"studentId\", \"changedValue\"]],\n  template: function StudentsListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"input\", 1);\n      i0.ɵɵlistener(\"keyup\", function StudentsListComponent_Template_input_keyup_1_listener($event) {\n        return ctx.onKeyUp($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\")(4, \"input\", 3);\n      i0.ɵɵlistener(\"change\", function StudentsListComponent_Template_input_change_4_listener($event) {\n        return ctx.onIsPassingChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"label\", 4);\n      i0.ɵɵtext(6, \"Is Passing\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\")(8, \"select\", 5);\n      i0.ɵɵlistener(\"change\", function StudentsListComponent_Template_select_change_8_listener($event) {\n        return ctx.onGroupSelect($event);\n      });\n      i0.ɵɵelementStart(9, \"option\", 6);\n      i0.ɵɵtext(10, \"All\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, StudentsListComponent_option_11_Template, 2, 3, \"option\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\")(13, \"div\")(14, \"label\", 8);\n      i0.ɵɵtext(15, \"From\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 9);\n      i0.ɵɵlistener(\"change\", function StudentsListComponent_Template_input_change_16_listener($event) {\n        return ctx.onStartDateChange($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\")(18, \"label\", 10);\n      i0.ɵɵtext(19, \"To\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"input\", 11);\n      i0.ɵɵlistener(\"change\", function StudentsListComponent_Template_input_change_20_listener($event) {\n        return ctx.onEndDateChange($event);\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(21, \"table\")(22, \"thead\")(23, \"th\", 12);\n      i0.ɵɵlistener(\"click\", function StudentsListComponent_Template_th_click_23_listener() {\n        return ctx.sortStudents(ctx.sortByEnum.id);\n      });\n      i0.ɵɵtext(24, \"#\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"th\", 12);\n      i0.ɵɵlistener(\"click\", function StudentsListComponent_Template_th_click_25_listener() {\n        return ctx.sortStudents(ctx.sortByEnum.name);\n      });\n      i0.ɵɵtext(26, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"th\", 12);\n      i0.ɵɵlistener(\"click\", function StudentsListComponent_Template_th_click_27_listener() {\n        return ctx.sortStudents(ctx.sortByEnum.dateOfBirth);\n      });\n      i0.ɵɵtext(28, \"Date of Birth\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"th\", 12);\n      i0.ɵɵlistener(\"click\", function StudentsListComponent_Template_th_click_29_listener() {\n        return ctx.sortStudents(ctx.sortByEnum.academy);\n      });\n      i0.ɵɵtext(30, \"Academy\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"th\", 12);\n      i0.ɵɵlistener(\"click\", function StudentsListComponent_Template_th_click_31_listener() {\n        return ctx.sortStudents(ctx.sortByEnum.group);\n      });\n      i0.ɵɵtext(32, \"Group\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"th\", 12);\n      i0.ɵɵlistener(\"click\", function StudentsListComponent_Template_th_click_33_listener() {\n        return ctx.sortStudents(ctx.sortByEnum.avgGrade);\n      });\n      i0.ɵɵtext(34, \"Avg Grade\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"th\");\n      i0.ɵɵtext(36, \"Actions\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(37, \"tbody\");\n      i0.ɵɵtemplate(38, StudentsListComponent_tr_38_Template, 22, 17, \"tr\", 13);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"value\", ctx.searchTerm);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"checked\", ctx.isPassing);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"selected\", !ctx.selectedGroup);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.groups);\n      i0.ɵɵadvance(27);\n      i0.ɵɵproperty(\"ngForOf\", ctx.students);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i5.GradeColorDirective, i6.AddGradesComponent, i3.UpperCasePipe, i3.DatePipe, i7.AverageGradePipe],\n  styles: [\"table[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\n    border: 1px solid black;\\n}\\n\\ntable[_ngcontent-%COMP%] {\\n    border-collapse: collapse;\\n    margin: 10px;\\n    width: calc(100% - 20px);\\n}\\n\\ntd[_ngcontent-%COMP%], th[_ngcontent-%COMP%] {\\n    padding: 5px;\\n}\\n\\n.search-wrapper[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    padding: 10px 0;\\n}\\n\\n.search-wrapper[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n    width: 300px;\\n    height: 30px;\\n    border-radius: 5px;\\n    border: 1px solid #ccc;\\n    padding: 5px;\\n}\\n\\n.filters-wrapper[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: center;\\n}\\n\\n.filters-wrapper[_ngcontent-%COMP%]    > div[_ngcontent-%COMP%] {\\n    padding: 0 10px;\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.filters-wrapper[_ngcontent-%COMP%]    > div[_ngcontent-%COMP%]    > label[for=\\\"is-passing\\\"][_ngcontent-%COMP%] {\\n    padding: 10px 0 10px 5px;\\n}\\n\\n.filters-wrapper[_ngcontent-%COMP%]   input[type=\\\"checkbox\\\"][_ngcontent-%COMP%] {\\n    height: 20px;\\n    width: 20px;\\n}\\n\\n.filters-wrapper[_ngcontent-%COMP%]   select[_ngcontent-%COMP%] {\\n    width: 300px;\\n    height: 30px;\\n    border-radius: 5px;\\n    border: 1px solid #ccc;\\n    padding: 5px\\n}\\n\\n.filters-wrapper[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]    + input[type=\\\"date\\\"][_ngcontent-%COMP%] {\\n    margin: 0 10px;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n    padding: 7px;\\n    border-radius: 5px;\\n    border: 1px solid #ccc;\\n    background-color: #fff;\\n    cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zdHVkZW50cy1saXN0L3N0dWRlbnRzLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osd0JBQXdCO0FBQzVCOztBQUVBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQix1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsYUFBYTtJQUNiLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLHdCQUF3QjtBQUM1Qjs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxZQUFZO0lBQ1osWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixzQkFBc0I7SUFDdEI7QUFDSjs7QUFFQTtJQUNJLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QixzQkFBc0I7SUFDdEIsZUFBZTtBQUNuQiIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlLCB0aCwgdGQge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xufVxuXG50YWJsZSB7XG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgICBtYXJnaW46IDEwcHg7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDIwcHgpO1xufVxuXG50ZCwgdGgge1xuICAgIHBhZGRpbmc6IDVweDtcbn1cblxuLnNlYXJjaC13cmFwcGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIHBhZGRpbmc6IDEwcHggMDtcbn1cblxuLnNlYXJjaC13cmFwcGVyIGlucHV0IHtcbiAgICB3aWR0aDogMzAwcHg7XG4gICAgaGVpZ2h0OiAzMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICAgIHBhZGRpbmc6IDVweDtcbn1cblxuLmZpbHRlcnMtd3JhcHBlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4uZmlsdGVycy13cmFwcGVyID4gZGl2IHtcbiAgICBwYWRkaW5nOiAwIDEwcHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uZmlsdGVycy13cmFwcGVyID4gZGl2ID4gbGFiZWxbZm9yPVwiaXMtcGFzc2luZ1wiXSB7XG4gICAgcGFkZGluZzogMTBweCAwIDEwcHggNXB4O1xufVxuXG4uZmlsdGVycy13cmFwcGVyIGlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB7XG4gICAgaGVpZ2h0OiAyMHB4O1xuICAgIHdpZHRoOiAyMHB4O1xufVxuXG4uZmlsdGVycy13cmFwcGVyIHNlbGVjdCB7XG4gICAgd2lkdGg6IDMwMHB4O1xuICAgIGhlaWdodDogMzBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgICBwYWRkaW5nOiA1cHhcbn1cblxuLmZpbHRlcnMtd3JhcHBlciBsYWJlbCArIGlucHV0W3R5cGU9XCJkYXRlXCJdIHtcbiAgICBtYXJnaW46IDAgMTBweDtcbn1cblxuYnV0dG9uIHtcbiAgICBwYWRkaW5nOiA3cHg7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["SortByEnum","SortDirectionEnum","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","group_r2","ctx_r0","selectedGroup","ɵɵadvance","ɵɵtextInterpolate","ɵɵlistener","StudentsListComponent_tr_38_div_18_Template_app_add_grades_changedValue_1_listener","$event","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","onChangedGrade","student_r3","id","ɵɵtemplate","StudentsListComponent_tr_38_div_18_Template","StudentsListComponent_tr_38_Template_button_click_20_listener","restoredCtx","_r9","$implicit","ctx_r8","onShowGrading","name","ɵɵpipeBind2","dateOfBirth","academy","ɵɵpipeBind1","group","grades","ɵɵtextInterpolate1","ctx_r1","showGrading","get","StudentsListComponent","constructor","studentsService","router","route","students","sortByEnum","sortBy","sortDirection","asc","Map","searchTerm","isPassing","groups","ngOnInit","snapshot","queryParams","startDate","Date","undefined","endDate","prepareFiltersAndGetStudents","sortStudents","sort","a","b","toLocaleLowerCase","localeCompare","Number","replace","avgGrade","reduce","sum","curr","desc","setQueryParams","searchStudents","navigate","onKeyUp","e","target","value","onIsPassingChange","checked","onGroupSelect","onStartDateChange","onEndDateChange","studentId","grade","set","gradeStudent","ɵɵdirectiveInject","i1","StudentsService","i2","Router","ActivatedRoute","selectors","decls","vars","consts","template","StudentsListComponent_Template","rf","ctx","StudentsListComponent_Template_input_keyup_1_listener","StudentsListComponent_Template_input_change_4_listener","StudentsListComponent_Template_select_change_8_listener","StudentsListComponent_option_11_Template","StudentsListComponent_Template_input_change_16_listener","StudentsListComponent_Template_input_change_20_listener","StudentsListComponent_Template_th_click_23_listener","StudentsListComponent_Template_th_click_25_listener","StudentsListComponent_Template_th_click_27_listener","StudentsListComponent_Template_th_click_29_listener","StudentsListComponent_Template_th_click_31_listener","StudentsListComponent_Template_th_click_33_listener","StudentsListComponent_tr_38_Template"],"sources":["/Users/ivo/Desktop/repos/mkwd11-js-09-ajsts-frbs/G10/class5/src/app/components/students-list/students-list.component.ts","/Users/ivo/Desktop/repos/mkwd11-js-09-ajsts-frbs/G10/class5/src/app/components/students-list/students-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Student } from '../../interfaces/student.interface';\nimport { StudentsService } from '../../services/students.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SearchFilters } from 'src/app/interfaces/search-filters.interface';\nimport { SortByEnum, SortDirectionEnum } from '../../interfaces/sort.enum';\n\n@Component({\n  selector: 'app-students-list',\n  templateUrl: './students-list.component.html',\n  styleUrls: ['./students-list.component.css'],\n})\nexport class StudentsListComponent implements OnInit {\n  students: Student[] = []; // local copy of the list of students, this can be both all students or filtered students depending on if we are searching something or not\n  sortByEnum = SortByEnum;\n  sortBy: SortByEnum = SortByEnum.id;\n  sortDirection: SortDirectionEnum = SortDirectionEnum.asc;\n  showGrading = new Map(); // {}\n\n  // list of all filters values\n  searchTerm: string = '';\n  isPassing: boolean = false;\n  selectedGroup: string = '';\n  startDate: Date | undefined;\n  endDate: Date | undefined;\n\n  // hardcoded value of all the groups\n  groups: string[] = [\n    'G1',\n    'G2',\n    'G3',\n    'G4',\n    'G5',\n    'G6',\n    'G7',\n    'G8',\n    'G9',\n    'G10',\n    'G11',\n    'G12',\n  ];\n\n  constructor(\n    private studentsService: StudentsService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.searchTerm = this.route.snapshot.queryParams['searchTerm'] || '';\n    this.isPassing = !!this.route.snapshot.queryParams['isPassing'];\n    this.selectedGroup = this.route.snapshot.queryParams['group'] || '';\n    this.startDate = !!this.route.snapshot.queryParams['startDate']\n      ? new Date(this.route.snapshot.queryParams['startDate'])\n      : undefined;\n    this.endDate = !!this.route.snapshot.queryParams['endDate']\n      ? new Date(this.route.snapshot.queryParams['endDate'])\n      : undefined;\n\n    this.students = this.prepareFiltersAndGetStudents();\n  }\n\n  sortStudents(sortBy: SortByEnum) {\n    this.sortBy = sortBy;\n\n    this.students = this.students.sort((a, b) => {\n      // Sorting ascending\n      if (this.sortDirection === SortDirectionEnum.asc) {\n        // Sort by name\n        if (\n          this.sortBy === SortByEnum.name ||\n          this.sortBy === SortByEnum.academy\n        ) {\n          return a[this.sortBy]\n            .toLocaleLowerCase()\n            .localeCompare(b[this.sortBy].toLocaleLowerCase());\n        }\n\n        // Sort by group\n        if (this.sortBy === SortByEnum.group) {\n          return (\n            Number(a.group.replace('G', '')) - Number(b.group.replace('G', ''))\n          );\n        }\n\n        // Sort by avg grade\n        if (this.sortBy === SortByEnum.avgGrade) {\n          return (\n            a.grades.reduce((sum, curr) => sum + curr, 0) -\n            b.grades.reduce((sum, curr) => sum + curr, 0)\n          );\n        }\n\n        return a[this.sortBy] > b[this.sortBy] ? 1 : -1;\n        // Sorting descending\n      } else {\n        // Sort by name\n        if (\n          this.sortBy === SortByEnum.name ||\n          this.sortBy === SortByEnum.academy\n        ) {\n          return b[this.sortBy]\n            .toLocaleLowerCase()\n            .localeCompare(a[this.sortBy].toLocaleLowerCase());\n        }\n\n        // Sort by group\n        if (this.sortBy === SortByEnum.group) {\n          return (\n            Number(b.group.replace('G', '')) - Number(a.group.replace('G', ''))\n          );\n        }\n\n        // Sort by avg grade\n        if (this.sortBy === SortByEnum.avgGrade) {\n          return (\n            b.grades.reduce((sum, curr) => sum + curr, 0) -\n            a.grades.reduce((sum, curr) => sum + curr, 0)\n          );\n        }\n\n        return a[this.sortBy] < b[this.sortBy] ? 1 : -1;\n      }\n    });\n\n    this.sortDirection =\n      this.sortDirection === SortDirectionEnum.asc\n        ? SortDirectionEnum.desc\n        : SortDirectionEnum.asc;\n  }\n\n  prepareFiltersAndGetStudents(): Student[] {\n    this.setQueryParams();\n\n    return this.studentsService.searchStudents({\n      searchTerm: this.searchTerm,\n      isPassing: this.isPassing,\n      group: this.selectedGroup,\n      startDate: this.startDate,\n      endDate: this.endDate,\n    });\n  }\n\n  setQueryParams() {\n    let queryParams: SearchFilters = {};\n\n    if (this.searchTerm) {\n      queryParams.searchTerm = this.searchTerm;\n    }\n\n    if (this.isPassing) {\n      queryParams.isPassing = this.isPassing;\n    }\n\n    if (this.selectedGroup) {\n      queryParams.group = this.selectedGroup;\n    }\n\n    if (this.startDate) {\n      queryParams.startDate = this.startDate;\n    }\n\n    if (this.endDate) {\n      queryParams.endDate = this.endDate;\n    }\n\n    this.router.navigate([], {\n      queryParams,\n    });\n  }\n\n  onKeyUp(e: any) {\n    this.searchTerm = e.target.value;\n    this.students = this.prepareFiltersAndGetStudents();\n  }\n\n  onIsPassingChange(e: any) {\n    this.isPassing = e.target.checked;\n    this.students = this.prepareFiltersAndGetStudents();\n  }\n\n  onGroupSelect(e: any) {\n    this.selectedGroup = e.target.value;\n    this.students = this.prepareFiltersAndGetStudents();\n  }\n\n  onStartDateChange(e: any) {\n    this.startDate = new Date(e.target.value);\n    this.students = this.prepareFiltersAndGetStudents();\n  }\n\n  onEndDateChange(e: any) {\n    this.endDate = new Date(e.target.value);\n    this.students = this.prepareFiltersAndGetStudents();\n  }\n\n  onChangedGrade({ studentId, grade }: { studentId: number; grade: number }) {\n    this.showGrading.set(studentId, false);\n\n    this.studentsService.gradeStudent(studentId, grade);\n\n    this.students = this.prepareFiltersAndGetStudents(); // refetch students from the service\n\n    // This should not be used while working with Objects and Arrays, as we need to create a new reference so that\n    // Angular knows that it needs to rerender (this is valid for properties that are used in the template)\n    // this.students[studentIndex].grades.push(grade);\n\n    // This is going to update the students locally in this component, and any other action fetching the students from the service will overwrite the new grade value\n    // console.log('Students in component', this.students);\n    // const studentIndex = this.students.findIndex((s) => s.id === studentId);\n    // this.students[studentIndex] = {\n    //   ...this.students[studentIndex],\n    //   grades: [...this.students[studentIndex].grades, grade],\n    // };\n  }\n\n  onShowGrading(studentId: number) {\n    // A map is basically an object\n    // {\n    // key === id of the student\n    // value === boolean (is it opened?)\n    // }\n\n    // set is used to assign value to a property in a Map\n    // get is used to fetch the value\n    this.showGrading.set(studentId, !this.showGrading.get(studentId));\n  }\n}\n","<!-- ONLY WHILE DEVELOPMENT -->\n<!-- <pre>\n    {{students | json}}\n</pre> -->\n\n<div class=\"search-wrapper\">\n    <input type=\"search\" id=\"search\" [value]=\"searchTerm\" placeholder=\"Search...\" (keyup)=\"onKeyUp($event)\" />\n</div>\n\n<div class=\"filters-wrapper\">\n    <div>\n        <input type=\"checkbox\" id=\"is-passing\" [checked]=\"isPassing\" (change)=\"onIsPassingChange($event)\">\n        <label for=\"is-passing\">Is Passing</label>\n    </div>\n    <div>\n        <select name=\"group\" id=\"group\" (change)=\"onGroupSelect($event)\">\n            <option value=\"\" [selected]=\"!selectedGroup\">All</option>\n            <option *ngFor=\"let group of groups\" [selected]=\"group === selectedGroup\" [value]=\"group\">{{group}}</option>\n        </select>\n    </div>\n    <div>\n        <div>\n            <label for=\"start-date\">From</label>\n            <input type=\"date\" id=\"start-date\" (change)=\"onStartDateChange($event)\" />\n        </div>\n        <div>\n            <label for=\"end-date\">To</label>\n            <input type=\"date\" id=\"end-date\" (change)=\"onEndDateChange($event)\">\n        </div>\n    </div>\n</div>\n\n<table>\n    <thead>\n        <th (click)=\"sortStudents(sortByEnum.id)\">#</th>\n        <th (click)=\"sortStudents(sortByEnum.name)\">Name</th>\n        <th (click)=\"sortStudents(sortByEnum.dateOfBirth)\">Date of Birth</th>\n        <th (click)=\"sortStudents(sortByEnum.academy)\">Academy</th>\n        <th (click)=\"sortStudents(sortByEnum.group)\">Group</th>\n        <th (click)=\"sortStudents(sortByEnum.avgGrade)\">Avg Grade</th>\n        <th>Actions</th>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let student of students\">\n            <td>{{student.id}}</td>\n            <td>{{student.name}}</td>\n            <td>{{student.dateOfBirth | date: 'dd.MM.yyyy'}}</td>\n            <td>{{student.academy}}</td>\n            <td>{{student.group | uppercase }}</td>\n            <td appGradeColor [grade]=\"student.grades | averageGrade\">\n                <div>\n                    {{student.grades | averageGrade }}\n                </div>\n                <div *ngIf=\"showGrading.get(student.id)\">\n                    <!-- showGrading[student.id] -->\n                    <app-add-grades [studentId]=\"student.id\" (changedValue)=\"onChangedGrade($event)\"></app-add-grades>\n                </div>\n            </td>\n            <td>\n                <button (click)=\"onShowGrading(student.id)\">Add Grade</button>\n            </td>\n        </tr>\n    </tbody>\n</table>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}