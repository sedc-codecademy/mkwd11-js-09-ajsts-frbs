{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let StudentsListComponent = class StudentsListComponent {\n  constructor(studentsService, router, route) {\n    this.studentsService = studentsService;\n    this.router = router;\n    this.route = route;\n    this.students = []; // local copy of the list of students, this can be both all students or filtered students depending on if we are searching something or not\n    // list of all filters values\n    this.searchTerm = '';\n    this.isPassing = false;\n    this.selectedGroup = '';\n    // hardcoded value of all the groups\n    this.groups = ['G1', 'G2', 'G3', 'G4', 'G5', 'G6', 'G7', 'G8', 'G9', 'G10', 'G11', 'G12'];\n  }\n  ngOnInit() {\n    this.searchTerm = this.route.snapshot.queryParams['searchTerm'] || '';\n    this.isPassing = !!this.route.snapshot.queryParams['isPassing'];\n    this.selectedGroup = this.route.snapshot.queryParams['group'] || '';\n    this.startDate = !!this.route.snapshot.queryParams['startDate'] ? new Date(this.route.snapshot.queryParams['startDate']) : undefined;\n    this.endDate = !!this.route.snapshot.queryParams['endDate'] ? new Date(this.route.snapshot.queryParams['endDate']) : undefined;\n    console.log(this.searchTerm, this.isPassing, this.selectedGroup, this.startDate, this.endDate);\n    this.students = this.prepareFiltersAndGetStudents();\n  }\n  prepareFiltersAndGetStudents() {\n    this.setQueryParams();\n    return this.studentsService.searchStudents({\n      searchTerm: this.searchTerm,\n      isPassing: this.isPassing,\n      group: this.selectedGroup,\n      startDate: this.startDate,\n      endDate: this.endDate\n    });\n  }\n  setQueryParams() {\n    let queryParams = {};\n    if (this.searchTerm) {\n      queryParams.searchTerm = this.searchTerm;\n    }\n    if (this.isPassing) {\n      queryParams.isPassing = this.isPassing;\n    }\n    if (this.selectedGroup) {\n      queryParams.group = this.selectedGroup;\n    }\n    if (this.startDate) {\n      queryParams.startDate = this.startDate;\n    }\n    if (this.endDate) {\n      queryParams.endDate = this.endDate;\n    }\n    this.router.navigate([], {\n      queryParams\n    });\n  }\n  onKeyUp(e) {\n    // console.log(e.target.value);\n    this.searchTerm = e.target.value;\n    if (e.target.value) {\n      this.router.navigate([], {\n        queryParams: {\n          searchTerm: e.target.value\n        }\n      });\n    } else {\n      this.router.navigate([], {\n        queryParams: {}\n      });\n    }\n    this.students = this.prepareFiltersAndGetStudents();\n  }\n  onIsPassingChange(e) {\n    this.isPassing = e.target.checked;\n    this.students = this.prepareFiltersAndGetStudents();\n  }\n  onGroupSelect(e) {\n    this.selectedGroup = e.target.value;\n    this.students = this.prepareFiltersAndGetStudents();\n  }\n  onStartDateChange(e) {\n    this.startDate = new Date(e.target.value);\n    this.students = this.prepareFiltersAndGetStudents();\n  }\n  onEndDateChange(e) {\n    this.endDate = new Date(e.target.value);\n    this.students = this.prepareFiltersAndGetStudents();\n  }\n};\nStudentsListComponent = __decorate([Component({\n  selector: 'app-students-list',\n  templateUrl: './students-list.component.html',\n  styleUrls: ['./students-list.component.css']\n})], StudentsListComponent);","map":{"version":3,"names":["Component","StudentsListComponent","constructor","studentsService","router","route","students","searchTerm","isPassing","selectedGroup","groups","ngOnInit","snapshot","queryParams","startDate","Date","undefined","endDate","console","log","prepareFiltersAndGetStudents","setQueryParams","searchStudents","group","navigate","onKeyUp","e","target","value","onIsPassingChange","checked","onGroupSelect","onStartDateChange","onEndDateChange","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/ivo/Desktop/repos/mkwd11-js-09-ajsts-frbs/G10/class5/src/app/components/students-list/students-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Student } from '../../interfaces/student.interface';\nimport { StudentsService } from '../../services/students.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SearchFilters } from 'src/app/interfaces/search-filters.interface';\n\n@Component({\n  selector: 'app-students-list',\n  templateUrl: './students-list.component.html',\n  styleUrls: ['./students-list.component.css'],\n})\nexport class StudentsListComponent implements OnInit {\n  students: Student[] = []; // local copy of the list of students, this can be both all students or filtered students depending on if we are searching something or not\n\n  // list of all filters values\n  searchTerm: string = '';\n  isPassing: boolean = false;\n  selectedGroup: string = '';\n  startDate: Date | undefined;\n  endDate: Date | undefined;\n\n  // hardcoded value of all the groups\n  groups: string[] = [\n    'G1',\n    'G2',\n    'G3',\n    'G4',\n    'G5',\n    'G6',\n    'G7',\n    'G8',\n    'G9',\n    'G10',\n    'G11',\n    'G12',\n  ];\n\n  constructor(\n    private studentsService: StudentsService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.searchTerm = this.route.snapshot.queryParams['searchTerm'] || '';\n    this.isPassing = !!this.route.snapshot.queryParams['isPassing'];\n    this.selectedGroup = this.route.snapshot.queryParams['group'] || '';\n    this.startDate = !!this.route.snapshot.queryParams['startDate']\n      ? new Date(this.route.snapshot.queryParams['startDate'])\n      : undefined;\n    this.endDate = !!this.route.snapshot.queryParams['endDate']\n      ? new Date(this.route.snapshot.queryParams['endDate'])\n      : undefined;\n\n    console.log(\n      this.searchTerm,\n      this.isPassing,\n      this.selectedGroup,\n      this.startDate,\n      this.endDate\n    );\n\n    this.students = this.prepareFiltersAndGetStudents();\n  }\n\n  prepareFiltersAndGetStudents(): Student[] {\n    this.setQueryParams();\n\n    return this.studentsService.searchStudents({\n      searchTerm: this.searchTerm,\n      isPassing: this.isPassing,\n      group: this.selectedGroup,\n      startDate: this.startDate,\n      endDate: this.endDate,\n    });\n  }\n\n  setQueryParams() {\n    let queryParams: SearchFilters = {};\n\n    if (this.searchTerm) {\n      queryParams.searchTerm = this.searchTerm;\n    }\n\n    if (this.isPassing) {\n      queryParams.isPassing = this.isPassing;\n    }\n\n    if (this.selectedGroup) {\n      queryParams.group = this.selectedGroup;\n    }\n\n    if (this.startDate) {\n      queryParams.startDate = this.startDate;\n    }\n\n    if (this.endDate) {\n      queryParams.endDate = this.endDate;\n    }\n\n    this.router.navigate([], {\n      queryParams,\n    });\n  }\n\n  onKeyUp(e: any) {\n    // console.log(e.target.value);\n    this.searchTerm = e.target.value;\n\n    if (e.target.value) {\n      this.router.navigate([], {\n        queryParams: {\n          searchTerm: e.target.value,\n        },\n      });\n    } else {\n      this.router.navigate([], {\n        queryParams: {},\n      });\n    }\n\n    this.students = this.prepareFiltersAndGetStudents();\n  }\n\n  onIsPassingChange(e: any) {\n    this.isPassing = e.target.checked;\n    this.students = this.prepareFiltersAndGetStudents();\n  }\n\n  onGroupSelect(e: any) {\n    this.selectedGroup = e.target.value;\n    this.students = this.prepareFiltersAndGetStudents();\n  }\n\n  onStartDateChange(e: any) {\n    this.startDate = new Date(e.target.value);\n    this.students = this.prepareFiltersAndGetStudents();\n  }\n\n  onEndDateChange(e: any) {\n    this.endDate = new Date(e.target.value);\n    this.students = this.prepareFiltersAndGetStudents();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}