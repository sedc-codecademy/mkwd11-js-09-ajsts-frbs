{"ast":null,"code":"var _class;\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AcademyTypeEnum } from 'src/app/interfaces/academy-type.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../services/students.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction StudentFormComponent_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", ctx_r0.nameHasErrorRequired ? \"Name is required\" : \"\", \" \", ctx_r0.nameHasErrorMinLength ? \"Name can't be less than 3 characters\" : \"\", \" \", ctx_r0.nameHasErrorMaxLength ? \"Name can't be more than 20 characters\" : \"\", \" \");\n  }\n}\nfunction StudentFormComponent_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", group_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(group_r3);\n  }\n}\nfunction StudentFormComponent_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const academy_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", academy_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", academy_r4, \" \");\n  }\n}\nexport class StudentFormComponent {\n  get nameHasErrorRequired() {\n    return this.studentForm.get('name')?.hasError('required');\n  }\n  get nameHasErrorMinLength() {\n    return this.studentForm.get('name')?.hasError('minlength');\n  }\n  get nameHasErrorMaxLength() {\n    return this.studentForm.get('name')?.hasError('maxlength');\n  }\n  constructor(studentsService, router, route) {\n    this.studentsService = studentsService;\n    this.router = router;\n    this.route = route;\n    this.studentForm = new FormGroup({\n      id: new FormControl(Date.now()),\n      name: new FormControl('', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(20)])),\n      group: new FormControl('', Validators.required),\n      academy: new FormControl('', Validators.required),\n      dateOfBirth: new FormControl('', Validators.required),\n      grades: new FormControl([])\n    });\n    this.academies = Object.values(AcademyTypeEnum);\n    this.groups = ['G1', 'G2', 'G3', 'G4', 'G5', 'G6', 'G7', 'G8', 'G9', 'G10', 'G11', 'G12'];\n    this.isEditing = false;\n  }\n  ngOnInit() {\n    const studentId = this.route.snapshot.params['id'];\n    console.log(studentId);\n    this.isEditing = !!studentId;\n    if (studentId) {\n      const student = this.studentsService.getStudentById(Number(studentId));\n      console.log(student);\n      if (student) {\n        const studentValue = {\n          ...student,\n          dateOfBirth: new Date(student.dateOfBirth).toISOString()\n        };\n        this.studentForm.patchValue(studentValue);\n      }\n    }\n  }\n  onSubmit() {\n    // console.log('form submitted', this.studentForm.value);\n    const student = {\n      ...this.studentForm.value,\n      dateOfBirth: new Date(this.studentForm.value.dateOfBirth ?? '')\n    };\n    if (this.isEditing) {} else {\n      // we are creating\n      this.studentsService.addStudent(student);\n    }\n    this.router.navigate(['/students']);\n  }\n}\n_class = StudentFormComponent;\n_class.ɵfac = function StudentFormComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.StudentsService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-student-form\"]],\n  decls: 25,\n  vars: 5,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"formControlName\", \"name\"], [\"class\", \"error\", 4, \"ngIf\"], [\"for\", \"group\"], [\"name\", \"group\", \"id\", \"group\", \"formControlName\", \"group\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"academy\"], [\"name\", \"academy\", \"id\", \"academy\", \"formControlName\", \"academy\"], [\"value\", \"\", \"selected\", \"\", \"disabled\", \"\"], [\"for\", \"date-of-birth\"], [\"type\", \"date\", \"id\", \"date-of-birth\", \"name\", \"dateOfBirth\", \"formControlName\", \"dateOfBirth\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"error\"], [3, \"value\"]],\n  template: function StudentFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function StudentFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n      i0.ɵɵtext(3, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵtemplate(5, StudentFormComponent_p_5_Template, 2, 3, \"p\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\")(7, \"label\", 4);\n      i0.ɵɵtext(8, \"Group\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"select\", 5);\n      i0.ɵɵtemplate(10, StudentFormComponent_option_10_Template, 2, 2, \"option\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\")(12, \"label\", 7);\n      i0.ɵɵtext(13, \"Academy\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"select\", 8)(15, \"option\", 9);\n      i0.ɵɵtext(16, \"Select...\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, StudentFormComponent_option_17_Template, 2, 2, \"option\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\")(19, \"label\", 10);\n      i0.ɵɵtext(20, \"Date of Birth\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\")(23, \"button\", 12);\n      i0.ɵɵtext(24, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      i0.ɵɵproperty(\"formGroup\", ctx.studentForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.studentForm.get(\"name\")) == null ? null : tmp_1_0.invalid) && (((tmp_1_0 = ctx.studentForm.get(\"name\")) == null ? null : tmp_1_0.touched) || ((tmp_1_0 = ctx.studentForm.get(\"name\")) == null ? null : tmp_1_0.dirty)));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.groups);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.academies);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"disabled\", ctx.studentForm.invalid);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"form[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n    width: 500px;\\n    align-items: center;\\n}\\n\\nform[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n    margin-top: 20px;\\n    padding: 10px;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n    display: block;\\n    margin-bottom: 8px;\\n}\\n\\ninput[_ngcontent-%COMP%], select[_ngcontent-%COMP%] {\\n    width: 300px;\\n    height: 30px;\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n    padding: 5px;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n    width: 100px;\\n    font-size: 16px;\\n    border-radius: 5px;\\n    border: 1px solid #ccc;\\n    padding: 15px;\\n    background-color: lawngreen;\\n    cursor: pointer;\\n}\\n\\n.error[_ngcontent-%COMP%] {\\n    color: red;\\n    font-size: 14px;\\n    margin-top: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zdHVkZW50LWZvcm0vc3R1ZGVudC1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFlBQVk7SUFDWixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osWUFBWTtJQUNaLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QixhQUFhO0lBQ2IsMkJBQTJCO0lBQzNCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsZUFBZTtJQUNmLGVBQWU7QUFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJmb3JtIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgd2lkdGg6IDUwMHB4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbmZvcm0gZGl2IHtcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xuICAgIHBhZGRpbmc6IDEwcHg7XG59XG5cbmxhYmVsIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tYm90dG9tOiA4cHg7XG59XG5cbmlucHV0LCBzZWxlY3Qge1xuICAgIHdpZHRoOiAzMDBweDtcbiAgICBoZWlnaHQ6IDMwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgcGFkZGluZzogNXB4O1xufVxuXG5idXR0b24ge1xuICAgIHdpZHRoOiAxMDBweDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gICAgcGFkZGluZzogMTVweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsYXduZ3JlZW47XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uZXJyb3Ige1xuICAgIGNvbG9yOiByZWQ7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIG1hcmdpbi10b3A6IDVweDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","AcademyTypeEnum","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate3","ctx_r0","nameHasErrorRequired","nameHasErrorMinLength","nameHasErrorMaxLength","ɵɵproperty","group_r3","ɵɵtextInterpolate","academy_r4","ɵɵtextInterpolate1","StudentFormComponent","studentForm","get","hasError","constructor","studentsService","router","route","id","Date","now","name","compose","required","minLength","maxLength","group","academy","dateOfBirth","grades","academies","Object","values","groups","isEditing","ngOnInit","studentId","snapshot","params","console","log","student","getStudentById","Number","studentValue","toISOString","patchValue","onSubmit","value","addStudent","navigate","ɵɵdirectiveInject","i1","StudentsService","i2","Router","ActivatedRoute","selectors","decls","vars","consts","template","StudentFormComponent_Template","rf","ctx","ɵɵlistener","StudentFormComponent_Template_form_ngSubmit_0_listener","ɵɵelement","ɵɵtemplate","StudentFormComponent_p_5_Template","StudentFormComponent_option_10_Template","StudentFormComponent_option_17_Template","tmp_1_0","invalid","touched","dirty"],"sources":["/Users/ivo/Desktop/repos/mkwd11-js-09-ajsts-frbs/G10/class6/src/app/components/student-form/student-form.component.ts","/Users/ivo/Desktop/repos/mkwd11-js-09-ajsts-frbs/G10/class6/src/app/components/student-form/student-form.component.html"],"sourcesContent":["import { StudentsService } from './../../services/students.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AcademyTypeEnum } from 'src/app/interfaces/academy-type.enum';\nimport { Student } from '../../interfaces/student.interface';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-student-form',\n  templateUrl: './student-form.component.html',\n  styleUrls: ['./student-form.component.css'],\n})\nexport class StudentFormComponent implements OnInit {\n  studentForm = new FormGroup({\n    id: new FormControl<number>(Date.now()), // just a workaround, this is not common practice\n    name: new FormControl<string>(\n      '',\n      Validators.compose([\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(20),\n      ])\n    ),\n    group: new FormControl<string>('', Validators.required),\n    academy: new FormControl<string>('', Validators.required),\n    dateOfBirth: new FormControl<string>('', Validators.required),\n    grades: new FormControl<number[]>([]),\n  });\n  academies = Object.values(AcademyTypeEnum);\n  groups: string[] = [\n    'G1',\n    'G2',\n    'G3',\n    'G4',\n    'G5',\n    'G6',\n    'G7',\n    'G8',\n    'G9',\n    'G10',\n    'G11',\n    'G12',\n  ];\n  isEditing: boolean = false;\n\n  get nameHasErrorRequired() {\n    return this.studentForm.get('name')?.hasError('required');\n  }\n\n  get nameHasErrorMinLength() {\n    return this.studentForm.get('name')?.hasError('minlength');\n  }\n\n  get nameHasErrorMaxLength() {\n    return this.studentForm.get('name')?.hasError('maxlength');\n  }\n\n  constructor(\n    private studentsService: StudentsService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    const studentId = this.route.snapshot.params['id'];\n    console.log(studentId);\n    this.isEditing = !!studentId;\n    if (studentId) {\n      const student = this.studentsService.getStudentById(Number(studentId));\n\n      console.log(student);\n\n      if (student) {\n        const studentValue = {\n          ...student,\n          dateOfBirth: new Date(student.dateOfBirth).toISOString(),\n        };\n        this.studentForm.patchValue(studentValue);\n      }\n    }\n  }\n\n  onSubmit() {\n    // console.log('form submitted', this.studentForm.value);\n    const student = {\n      ...this.studentForm.value,\n      dateOfBirth: new Date(this.studentForm.value.dateOfBirth ?? ''),\n    };\n\n    if (this.isEditing) {\n    } else {\n      // we are creating\n      this.studentsService.addStudent(student as Student);\n    }\n\n    this.router.navigate(['/students']);\n  }\n}\n","<form (ngSubmit)=\"onSubmit()\" [formGroup]=\"studentForm\">\n    <div>\n        <label for=\"name\">Name</label>\n        <input type=\"text\" id=\"name\" name=\"name\" formControlName=\"name\" />\n\n        <!-- try to avoid this studentForm.controls['name'], use .get() instead -->\n        <p class=\"error\"\n            *ngIf=\"studentForm.get('name')?.invalid && (studentForm.get('name')?.touched || studentForm.get('name')?.dirty)\">\n            {{ nameHasErrorRequired ? 'Name is required' : ''}}\n            {{ nameHasErrorMinLength ? \"Name can't be less than 3 characters\" : \"\" }}\n            {{ nameHasErrorMaxLength ? \"Name can't be more than 20 characters\" : \"\" }}\n        </p>\n    </div>\n\n    <div>\n        <label for=\"group\">Group</label>\n        <select name=\"group\" id=\"group\" formControlName=\"group\">\n            <option *ngFor=\"let group of groups\" [value]=\"group\">{{group}}</option>\n        </select>\n    </div>\n\n    <div>\n        <label for=\"academy\">Academy</label>\n        <select name=\"academy\" id=\"academy\" formControlName=\"academy\">\n            <option value=\"\" selected disabled>Select...</option>\n            <option *ngFor=\"let academy of academies\" [value]=\"academy\">\n                {{academy}}\n            </option>\n        </select>\n    </div>\n\n    <div>\n        <label for=\"date-of-birth\">Date of Birth</label>\n        <input type=\"date\" id=\"date-of-birth\" name=\"dateOfBirth\" formControlName=\"dateOfBirth\">\n    </div>\n\n    <div>\n        <button type=\"submit\" [disabled]=\"studentForm.invalid\">Submit</button>\n    </div>\n</form>"],"mappings":";AAEA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AACnE,SAASC,eAAe,QAAQ,sCAAsC;;;;;;;;ICG9DC,EAAA,CAAAC,cAAA,YACqH;IACjHD,EAAA,CAAAE,MAAA,GAGJ;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAHAH,EAAA,CAAAI,SAAA,GAGJ;IAHIJ,EAAA,CAAAK,kBAAA,MAAAC,MAAA,CAAAC,oBAAA,iCAAAD,MAAA,CAAAE,qBAAA,qDAAAF,MAAA,CAAAG,qBAAA,qDAGJ;;;;;IAMIT,EAAA,CAAAC,cAAA,iBAAqD;IAAAD,EAAA,CAAAE,MAAA,GAAS;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAAlCH,EAAA,CAAAU,UAAA,UAAAC,QAAA,CAAe;IAACX,EAAA,CAAAI,SAAA,GAAS;IAATJ,EAAA,CAAAY,iBAAA,CAAAD,QAAA,CAAS;;;;;IAQ9DX,EAAA,CAAAC,cAAA,iBAA4D;IACxDD,EAAA,CAAAE,MAAA,GACJ;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAFiCH,EAAA,CAAAU,UAAA,UAAAG,UAAA,CAAiB;IACvDb,EAAA,CAAAI,SAAA,GACJ;IADIJ,EAAA,CAAAc,kBAAA,MAAAD,UAAA,MACJ;;;ADfZ,OAAM,MAAOE,oBAAoB;EAiC/B,IAAIR,oBAAoBA,CAAA;IACtB,OAAO,IAAI,CAACS,WAAW,CAACC,GAAG,CAAC,MAAM,CAAC,EAAEC,QAAQ,CAAC,UAAU,CAAC;EAC3D;EAEA,IAAIV,qBAAqBA,CAAA;IACvB,OAAO,IAAI,CAACQ,WAAW,CAACC,GAAG,CAAC,MAAM,CAAC,EAAEC,QAAQ,CAAC,WAAW,CAAC;EAC5D;EAEA,IAAIT,qBAAqBA,CAAA;IACvB,OAAO,IAAI,CAACO,WAAW,CAACC,GAAG,CAAC,MAAM,CAAC,EAAEC,QAAQ,CAAC,WAAW,CAAC;EAC5D;EAEAC,YACUC,eAAgC,EAChCC,MAAc,EACdC,KAAqB;IAFrB,KAAAF,eAAe,GAAfA,eAAe;IACf,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,KAAK,GAALA,KAAK;IA/Cf,KAAAN,WAAW,GAAG,IAAInB,SAAS,CAAC;MAC1B0B,EAAE,EAAE,IAAI3B,WAAW,CAAS4B,IAAI,CAACC,GAAG,EAAE,CAAC;MACvCC,IAAI,EAAE,IAAI9B,WAAW,CACnB,EAAE,EACFE,UAAU,CAAC6B,OAAO,CAAC,CACjB7B,UAAU,CAAC8B,QAAQ,EACnB9B,UAAU,CAAC+B,SAAS,CAAC,CAAC,CAAC,EACvB/B,UAAU,CAACgC,SAAS,CAAC,EAAE,CAAC,CACzB,CAAC,CACH;MACDC,KAAK,EAAE,IAAInC,WAAW,CAAS,EAAE,EAAEE,UAAU,CAAC8B,QAAQ,CAAC;MACvDI,OAAO,EAAE,IAAIpC,WAAW,CAAS,EAAE,EAAEE,UAAU,CAAC8B,QAAQ,CAAC;MACzDK,WAAW,EAAE,IAAIrC,WAAW,CAAS,EAAE,EAAEE,UAAU,CAAC8B,QAAQ,CAAC;MAC7DM,MAAM,EAAE,IAAItC,WAAW,CAAW,EAAE;KACrC,CAAC;IACF,KAAAuC,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACtC,eAAe,CAAC;IAC1C,KAAAuC,MAAM,GAAa,CACjB,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,KAAK,EACL,KAAK,CACN;IACD,KAAAC,SAAS,GAAY,KAAK;EAkBvB;EAEHC,QAAQA,CAAA;IACN,MAAMC,SAAS,GAAG,IAAI,CAACnB,KAAK,CAACoB,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IAClDC,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;IACtB,IAAI,CAACF,SAAS,GAAG,CAAC,CAACE,SAAS;IAC5B,IAAIA,SAAS,EAAE;MACb,MAAMK,OAAO,GAAG,IAAI,CAAC1B,eAAe,CAAC2B,cAAc,CAACC,MAAM,CAACP,SAAS,CAAC,CAAC;MAEtEG,OAAO,CAACC,GAAG,CAACC,OAAO,CAAC;MAEpB,IAAIA,OAAO,EAAE;QACX,MAAMG,YAAY,GAAG;UACnB,GAAGH,OAAO;UACVb,WAAW,EAAE,IAAIT,IAAI,CAACsB,OAAO,CAACb,WAAW,CAAC,CAACiB,WAAW;SACvD;QACD,IAAI,CAAClC,WAAW,CAACmC,UAAU,CAACF,YAAY,CAAC;;;EAG/C;EAEAG,QAAQA,CAAA;IACN;IACA,MAAMN,OAAO,GAAG;MACd,GAAG,IAAI,CAAC9B,WAAW,CAACqC,KAAK;MACzBpB,WAAW,EAAE,IAAIT,IAAI,CAAC,IAAI,CAACR,WAAW,CAACqC,KAAK,CAACpB,WAAW,IAAI,EAAE;KAC/D;IAED,IAAI,IAAI,CAACM,SAAS,EAAE,C,CACnB,MAAM;MACL;MACA,IAAI,CAACnB,eAAe,CAACkC,UAAU,CAACR,OAAkB,CAAC;;IAGrD,IAAI,CAACzB,MAAM,CAACkC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;EACrC;;SApFWxC,oBAAoB;;mBAApBA,MAAoB,EAAAf,EAAA,CAAAwD,iBAAA,CAAAC,EAAA,CAAAC,eAAA,GAAA1D,EAAA,CAAAwD,iBAAA,CAAAG,EAAA,CAAAC,MAAA,GAAA5D,EAAA,CAAAwD,iBAAA,CAAAG,EAAA,CAAAE,cAAA;AAAA;;QAApB9C,MAAoB;EAAA+C,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCZjCpE,EAAA,CAAAC,cAAA,cAAwD;MAAlDD,EAAA,CAAAsE,UAAA,sBAAAC,uDAAA;QAAA,OAAYF,GAAA,CAAAjB,QAAA,EAAU;MAAA,EAAC;MACzBpD,EAAA,CAAAC,cAAA,UAAK;MACiBD,EAAA,CAAAE,MAAA,WAAI;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MAC9BH,EAAA,CAAAwE,SAAA,eAAkE;MAGlExE,EAAA,CAAAyE,UAAA,IAAAC,iCAAA,eAKI;MACR1E,EAAA,CAAAG,YAAA,EAAM;MAENH,EAAA,CAAAC,cAAA,UAAK;MACkBD,EAAA,CAAAE,MAAA,YAAK;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MAChCH,EAAA,CAAAC,cAAA,gBAAwD;MACpDD,EAAA,CAAAyE,UAAA,KAAAE,uCAAA,oBAAuE;MAC3E3E,EAAA,CAAAG,YAAA,EAAS;MAGbH,EAAA,CAAAC,cAAA,WAAK;MACoBD,EAAA,CAAAE,MAAA,eAAO;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MACpCH,EAAA,CAAAC,cAAA,iBAA8D;MACvBD,EAAA,CAAAE,MAAA,iBAAS;MAAAF,EAAA,CAAAG,YAAA,EAAS;MACrDH,EAAA,CAAAyE,UAAA,KAAAG,uCAAA,oBAES;MACb5E,EAAA,CAAAG,YAAA,EAAS;MAGbH,EAAA,CAAAC,cAAA,WAAK;MAC0BD,EAAA,CAAAE,MAAA,qBAAa;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MAChDH,EAAA,CAAAwE,SAAA,iBAAuF;MAC3FxE,EAAA,CAAAG,YAAA,EAAM;MAENH,EAAA,CAAAC,cAAA,WAAK;MACsDD,EAAA,CAAAE,MAAA,cAAM;MAAAF,EAAA,CAAAG,YAAA,EAAS;;;;MArChDH,EAAA,CAAAU,UAAA,cAAA2D,GAAA,CAAArD,WAAA,CAAyB;MAO1ChB,EAAA,CAAAI,SAAA,GAA8G;MAA9GJ,EAAA,CAAAU,UAAA,WAAAmE,OAAA,GAAAR,GAAA,CAAArD,WAAA,CAAAC,GAAA,2BAAA4D,OAAA,CAAAC,OAAA,QAAAD,OAAA,GAAAR,GAAA,CAAArD,WAAA,CAAAC,GAAA,2BAAA4D,OAAA,CAAAE,OAAA,OAAAF,OAAA,GAAAR,GAAA,CAAArD,WAAA,CAAAC,GAAA,2BAAA4D,OAAA,CAAAG,KAAA,GAA8G;MAUrFhF,EAAA,CAAAI,SAAA,GAAS;MAATJ,EAAA,CAAAU,UAAA,YAAA2D,GAAA,CAAA/B,MAAA,CAAS;MAQPtC,EAAA,CAAAI,SAAA,GAAY;MAAZJ,EAAA,CAAAU,UAAA,YAAA2D,GAAA,CAAAlC,SAAA,CAAY;MAYtBnC,EAAA,CAAAI,SAAA,GAAgC;MAAhCJ,EAAA,CAAAU,UAAA,aAAA2D,GAAA,CAAArD,WAAA,CAAA8D,OAAA,CAAgC"},"metadata":{},"sourceType":"module","externalDependencies":[]}